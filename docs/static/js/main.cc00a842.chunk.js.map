{"version":3,"sources":["component/HomePage.js","component/AboutPages.js","common/Header.js","api/apiUtils.js","api/courseApi.js","component/CourseList.js","component/CoursesPage.js","component/NotFoundPage.js","common/TextInput.js","component/CourseForm.js","component/ManageCoursePage.js","component/App.js","index.js"],"names":["HomePage","className","to","AboutPages","React","Component","Header","activeStyle","color","exact","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","CourseList","props","course","map","key","id","slug","title","authorId","category","CoursesPage","useState","courses","setCourses","useEffect","fetch","then","catch","_courses","NotFoundPage","TextInput","wrapperClass","length","htmlFor","label","type","onChange","name","value","defaultProps","CourseForm","onSubmit","ManageCoursePage","slugt","setCourse","event","updatedCourse","target","preventDefault","method","headers","body","JSON","stringify","parseInt","courseApi","history","push","App","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc00a842.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1>Home</h1>\r\n      <p>React , react-router for web pages</p>\r\n      <Link to=\"about\" className=\"btn btn-primary\">\r\n        About\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nclass AboutPages extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About</h1>\r\n        <p>This app uses react</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AboutPages;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const activeStyle = { color: \"orange\" };\r\n  return (\r\n    <nav>\r\n      <NavLink exact activeStyle={activeStyle} to=\"/\">\r\n        Home\r\n      </NavLink>{\" \"}\r\n      |{\" \"}\r\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\r\n        Courses\r\n      </NavLink>{\" \"}\r\n      |\r\n      <NavLink activeStyle={activeStyle} to=\"/about\">\r\n        About{\" \"}\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\nexport default Header;\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\r\n\r\nexport function getCourses() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getCourseBySlug(slug) {\r\n  return fetch(baseUrl + \"?slug=\" + slug)\r\n    .then(response => {\r\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\r\n      return response.json().then(courses => {\r\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\r\n        return courses[0]; // should only find one course for a given slug, so return it.\r\n      });\r\n    })\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveCourse(course) {\r\n  return fetch(baseUrl + (course.id || \"\"), {\r\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...course,\r\n      // Parse authorId to a number (in case it was sent as a string).\r\n      authorId: parseInt(course.authorId, 10)\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteCourse(courseId) {\r\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CourseList(props) {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Title</th>\r\n          <th>Author Id</th>\r\n          <th>Category</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.course.map(course => {\r\n          return (\r\n            <tr key={course.id}>\r\n              <td>\r\n                <Link to={\"/course/\" + course.slug}>{course.title}</Link>\r\n              </td>\r\n              <td>{course.authorId}</td>\r\n              <td>{course.category}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\nexport default CourseList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getCourses } from \"../api/courseApi\";\r\nimport CourseList from \"./CourseList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CoursesPage() {\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getCourses().then(_courses => {\r\n      setCourses(_courses);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Courses</h2>\r\n      <Link className=\"btn btn-primary\" to=\"/course\">\r\n        Add\r\n      </Link>\r\n      <CourseList course={courses} />\r\n    </>\r\n  );\r\n}\r\nexport default CoursesPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFoundPage() {\r\n  return (\r\n    <div>\r\n      <h2>Page Not Found</h2>\r\n      <p>\r\n        <Link to=\"/\">Back to Home</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TextInput(props) {\r\n  let wrapperClass = \"form-group\";\r\n  if (props.error.length > 0) {\r\n    wrapperClass += \" has-error\";\r\n  }\r\n\r\n  return (\r\n    <div className={wrapperClass}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          id={props.id}\r\n          type=\"text\"\r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          className=\"form-control\"\r\n          value={props.value}\r\n        />\r\n      </div>\r\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  error: \"\"\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport TextInput from \"../common/TextInput\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CourseForm(props) {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <TextInput\r\n        id=\"title\"\r\n        label=\"Title\"\r\n        onChange={props.onChange}\r\n        name=\"title\"\r\n        value={props.course.title}\r\n      />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"author\">Author</label>\r\n        <div className=\"field\">\r\n          <select\r\n            id=\"author\"\r\n            name=\"authorId\"\r\n            onChange={props.onChange}\r\n            value={props.course.authorId || \"\"}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"\" />\r\n            <option value=\"1\">Cory House</option>\r\n            <option value=\"2\">Scott Allen</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <TextInput\r\n        id=\"category\"\r\n        label=\"Category\"\r\n        name=\"category\"\r\n        onChange={props.onChange}\r\n        value={props.course.category}\r\n      />\r\n\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nCourseForm.propTypes = {\r\n  course: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CourseForm;\r\n","import React, { useState } from \"react\";\r\nimport CourseForm from \"./CourseForm\";\r\nimport * as courseApi from \"../api/courseApi\";\r\n\r\nconst ManageCoursePage = props => {\r\n  const [course, setCourse] = useState({\r\n    id: null,\r\n    slugt: \"\",\r\n    title: \"\",\r\n    authorId: null,\r\n    category: \"\"\r\n  });\r\n  function handleChange(event) {\r\n    const updatedCourse = {\r\n      ...course,\r\n      [event.target.name]: event.target.value\r\n    };\r\n    setCourse(updatedCourse);\r\n  }\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    courseApi.saveCourse(course).then(() => {\r\n      props.history.push(\"/courses\");\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Manage Course</h2>\r\n      <CourseForm\r\n        course={course}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageCoursePage;\r\n","import React from \"react\";\r\nimport HomePage from \"./HomePage\";\r\nimport AboutPages from \"./AboutPages\";\r\nimport Header from \"../common/Header\";\r\nimport CoursesPage from \"./CoursesPage\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport ManageCoursePage from \"./ManageCoursePage\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/courses\" component={CoursesPage}></Route>\r\n        <Route path=\"/course/:slug\" component={ManageCoursePage}></Route>\r\n        <Route path=\"/course\" component={ManageCoursePage}></Route>\r\n        <Route path=\"/about\" component={AboutPages}></Route>\r\n        <Route path=\"/\" exact component={HomePage}></Route>\r\n        <Redirect from=\"/about-page\" to=\"/about\" />\r\n        <Route component={NotFoundPage}></Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./component/App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nrender(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}